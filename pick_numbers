#!/usr/bin/env python

from __future__ import division
import random
import os
import sys
import json
from math import factorial as fac
from datetime import datetime as dt

#globals
#ranges of current powerball rules
numRegBalls = 5
numPowBalls = 1
maxRegNum = 69
maxPowNum = 26
odds = (fac(maxRegNum)/(fac(numRegBalls)*fac(maxRegNum-numRegBalls)))*maxPowNum
dateStr = dt.today().strftime("%b-%d-%Y %H:%M:%S")

#function to get random numbers
def GenerateNumbers():
    #generate the regular numbers and power numbers
    regBalls = random.sample(xrange(1,maxRegNum + 1),numRegBalls)
    powBall = random.sample(xrange(1,maxPowNum + 1),numPowBalls)[0]
    
    return [regBalls,powBall]
    
    
#main function
if "__main__" in __name__:
    historyPath = None
    history = None
    histJson = None
    
    if len(sys.argv) > 1 and sys.argv[1] == "--multi":
        historyPath = "{0}_multiHistory.json".format(dateStr)
        history = []
        histJson = {"HISTORY":history}
        rng = 1000#int(odds)
        mod = rng/20
        print "generating {0} powerball picks".format(rng)
        for cntr in xrange(1,rng+1):
            history.append(GenerateNumbers())
            if (cntr % mod) == 0:
                print r'{0:.2f}% done'.format((cntr/rng)*100)
            
    else:    
        historyPath = "pick_history.json"

        if os.path.exists(historyPath):
            histJson = json.load(open(historyPath,'rb'))
        else:
            histJson = {"HISTORY":[]}
        
        history = historyMap["HISTORY"]
        regBalls,powBalls = GenerateNumbers()
        history.append([dateStr,regBalls,powBalls])
        print "numbers: %s  PowerBall: %s" % (', '.join(map(str,regBalls)),', '.join(map(str,powBalls)))
        
    
    #save history
    with open(historyPath,'wb') as output:
        json.dump(histJson,output)#,sort_keys=True,indent=4,separators=(',',': '))

